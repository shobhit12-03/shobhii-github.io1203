#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

int precedence(char op)
{
    if (op == '*' || op == '/')
        return 2;
    if (op == '+' || op == '-')
        return 1;
    return 0;
}

int applyOp(int a, int b, char op)
{
    switch (op)
    {
    case '+':
        return a + b;
    case '-':
        return a - b;
    case '*':
        return a * b;
    case '/':
        if (b == 0)
        {
            printf("Error: Division by zero.\n");
            exit(0);
        }
        return a / b;
    default:
        printf("Error: Invalid operator.\n");
        exit(0);
    }
}

int evaluateExpression(char exp[])
{
    int num[50], top = -1;
    char op[50];
    int optop = -1;

    for (int i = 0; exp[i]; i++)
    {
        if (exp[i] == ' ')
            continue;

        if (isdigit(exp[i]))
        {
            int val = 0;
            while (isdigit(exp[i]))
            {
                val = val * 10 + (exp[i] - '0');
                i++;
            }
            i--;
            num[++top] = val;
        }
        else if (exp[i] == '+' || exp[i] == '-' || exp[i] == '*' || exp[i] == '/')
        {
            while (optop >= 0 && precedence(op[optop]) >= precedence(exp[i]))
            {
                int b = num[top--];
                int a = num[top--];
                char c = op[optop--];
                num[++top] = applyOp(a, b, c);
            }
            op[++optop] = exp[i];
        }
        else
        {
            printf("Error: Invalid character '%c'.\n", exp[i]);
            exit(0);
        }
    }

    while (optop >= 0)
    {
        int b = num[top--];
        int a = num[top--];
        char c = op[optop--];
        num[++top] = applyOp(a, b, c);
    }

    return num[top];
}

int main()
{
    char exp[100];

    printf("Enter expression: ");
    fgets(exp, sizeof(exp), stdin);

    exp[strcspn(exp, "\n")] = '\0';

    int result = evaluateExpression(exp);
    printf("Result: %d\n", result);

    return 0;
}
